import http.server
import socketserver
import sys


class CustomHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Serve the exploit console on *any* path:
        self.send_response(200)
        self.send_header("Content-Type", "text/html; charset=utf-8")
        self.end_headers()
        with open("exploit_console.html", "rb") as f:
            self.wfile.write(f.read())


def main():
    min_port: int = int(sys.argv[1]) if len(sys.argv) > 1 else 80
    max_port: int = int(sys.argv[2]) if len(sys.argv) > 2 else min_port
    for port in range(min_port, max_port + 1):
        try:
            with socketserver.TCPServer(("", port), CustomHandler) as httpd:
                print(f"Serving the exploit console at http://localhost:{port}")
                httpd.serve_forever()
        except OSError as e:
            if e.errno == 48:  # Address already in use:
                continue  # try another port...
    print(f"Error: no port between {min_port} and {max_port} could be assigned.")


if __name__ == "__main__":
    main()
