import unittest

from kim_and_lee_vulnerability_detection import is_safe_url_prefix, is_safe_origin_suffix


class TestSenderAuthentication(unittest.TestCase):
    def test_url_prefix_check(self):
        # Positive examples:
        self.assertTrue(is_safe_url_prefix("https://admin.com/"))
        self.assertTrue(is_safe_url_prefix("https://admin.com/foo"))

        # Negative examples:
        self.assertFalse(is_safe_url_prefix("https://admin.com"))

    def test_origin_suffix_check(self):
        # Positive examples:
        self.assertTrue(is_safe_origin_suffix(".admin.com"))
        self.assertTrue(is_safe_origin_suffix(".admin.co.uk"))
        self.assertTrue(is_safe_origin_suffix("/admin.com"))
        self.assertTrue(is_safe_origin_suffix("//admin.com"))
        self.assertTrue(is_safe_origin_suffix("://admin.com"))
        self.assertTrue(is_safe_origin_suffix("https://admin.com"))

        # Negative examples:
        self.assertFalse(is_safe_origin_suffix("admin.com"))
        self.assertFalse(is_safe_origin_suffix(".co.uk"))
        self.assertFalse(is_safe_origin_suffix("http://admin.com"))
        self.assertFalse(is_safe_origin_suffix(".sth.ac.at"))  # https://publicsuffix.org/
        self.assertFalse(is_safe_origin_suffix("foo.sth.ac.at"))


if __name__ == '__main__':
    unittest.main()
